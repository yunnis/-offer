#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    // Parameters:
    //        numbers:     an array of integers
    //        length:      the length of array numbers
    //        duplication: (Output) the duplicated number in the array number
    // Return value:       true if the input is valid, and there are some duplications in the array number
    //                     otherwise false
    //在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。
    //请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。
    //牛客网报错,数组a的大小无法确定
    bool duplicate(int numbers[], int length, int* duplication) {
		int a[length]{};
		bool have = false;
		for ( int i = 0; i < length; i++ )
		{
			a[numbers[i]]++;
			if( a[numbers[i]] > 1 )
			{
				duplication = &numbers[i];
				have = true;
				break;
			}//if
		}//for
		//cout << *duplication;
		return have;
    }//dupicate
    //牛客网通过的代码
	bool duplicate1(int numbers[], int length, int* duplication) {
		//int a[length]{};  //牛客网报错
        vector<int> a (length);
		bool have = false;
		for ( int i = 0; i < length; i++ )
		{
			a[numbers[i]]++;
			if( a[numbers[i]] > 1 )
			{
				duplication = &numbers[i]; //牛客网需要用*duplication = numbers[i];
				have = true;
				break;
			}//if
		}//for
		cout << *duplication;
		return have;
    }//dupicate
};

int main()
{
	int a[5]{2,1,3,1,4}, *res;
	Solution s;
	cout << s.duplicate(a,5,res);
    return 0;
}
