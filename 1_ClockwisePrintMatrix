//输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
//例如，如果输入如下4 X 4 矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
//则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;
int Count = 0;
int i, j;
vector<vector<int> > arr(4);


void InitArray(){
	for(i = 0; i < arr.size(); i++)
		arr[i].resize(4);
	for(i = 0; i < arr.size(); i++){
		for(j = 0; j < arr[0].size(); j++)
			arr[i][j] = (i+1)*(j+1);
	}
}

void PrintArray(vector<vector<int> > arr){
	for(i = 0; i < arr.size(); i++){
		for(j = 0; j < arr[0].size(); j++){
				cout << arr[i][j] << setw(2) << " ";
			if(j == arr[0].size()-1)
				cout << endl;
		}
	}
}

void PrintArray1(vector<int> arr){
	for(i = 0; i < arr.size(); i++){
		cout << arr[i] << " ";
	}
}

void ClockwisePrintArray(vector<vector<int> > arr){
	int row = arr.size();
	int col = arr[0].size();
	int left = 0, top = 0, right = col - 1, bottom = row - 1;
	while(left <= right && top <= bottom && Count <= row * col) {
		for(j = left; j <= right; j++){
			cout << arr[top][j] << " ";
			Count++;
		}
		for(i = top + 1;i <= bottom; i++){
			cout << arr[i][right] << " ";
			Count++;
		}
		if(top != bottom)
		for(j = right - 1; j >= left; j--) {
			cout << arr[bottom][j] << " ";
			Count++;
		}
		if(left != right)
		for(i = bottom - 1; i > top; i--) {
			cout << arr[i][left] << " ";
			Count++;
		}
		left++,top++,right--,bottom--;
	}
	cout << endl << Count << endl;
}
vector<int> printMatrix(vector<vector<int> > matrix) {
	int row = matrix.size();
	int col = matrix[0].size();
	int left = 0, top = 0, right = col - 1, bottom = row - 1,i,j;
	vector<int> res;
	while(left <= right && top <= bottom ) {
		for(j = left; j <= right; j++){
			res.push_back(matrix[top][j]);
		}
		for(i = top + 1;i <= bottom; i++){
			res.push_back(matrix[i][right]) ;
		}
		if(top != bottom)
		for(j = right - 1; j >= left; j--) {
			res.push_back(matrix[bottom][j]);
		}
		if(left != right)
		for(i = bottom - 1; i > top; i--) {
			res.push_back(matrix[i][left]);
		}
		left++,top++,right--,bottom--;
	}
	return res;
}

int main()
{
	InitArray();
	PrintArray(arr);
	ClockwisePrintArray(arr);
	vector<int> res = printMatrix(arr);
	PrintArray1(printMatrix(arr));
    cout << "Hello world!" << endl;
    return 0;
}
