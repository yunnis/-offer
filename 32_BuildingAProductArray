#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    /**
     * @brief 给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],
     * 其中B中的元素B[i]=A[0] * A[1] *...* A[i-1] * A[i+1] *...* A[n-1]。不能使用除法。
     * @param const vector<int>& A 给的A数组
     * @return vector<int> 构建的B数组
     */
	// n = 5
	// b[0] =     a1*a2*a3*a4
	// b[1] = a0*    a2*a3*a4
	// b[2] = a0*a1*   *a3*a4
	// b[3] = a0*a1*a2*   *a4
	// b[4] = a0*a1*a2*a3
    vector<int> multiply(const vector<int>& A) {
    	vector<int> res;
    	int tmp = 1;
    	res.resize(A.size());
    	res[0] = 1;
		for ( unsigned int i = 1; i < A.size(); i++ )
		{
			res[i] = res[i-1] * A[i-1];
		}
		for ( int i = A.size() - 2; i >= 0; i-- )
		{
			tmp *= A[i+1];
			res[i] = res[i] * tmp;
		}
		return res;
    }
};

int main()
{
	int array[5]{2,3,4,5,6};
	vector<int> a(array,array+5);
	vector<int> b(a.begin(),a.end()), res;
	Solution s;
	res = s.multiply(a);
	for( unsigned int i = 0; i < res.size(); i++ )
	{
		cout << res[i] << " ";
	}
    return 0;
}
