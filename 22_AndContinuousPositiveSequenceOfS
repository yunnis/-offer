#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    /**
     * @brief 输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序
     * @param int sum 序列的和
     */
    //要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,
    //他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
    //没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。
    vector<vector<int> > FindContinuousSequence(int sum) {
        // 使用滑动窗口的思想
        vector<int> v;
        vector<vector<int> > vv;
        int s = 0, l = 0;
		for ( int i = 0; i < sum; i++)
		{
			s = 0;l = 0;
			v.clear();
			for ( int j = i; j < sum; j++)
			{
				v.push_back(j);
				s += v[l];
				l++;
				if ( s >= sum )
					break;
			}
			if ( s == sum)
				vv.push_back(v);
		}
		return vv;
    }
};

int main()
{
	vector<vector<int> > vv;
	vector<int> v{1,2,3};
	Solution s;
	vv = s.FindContinuousSequence(3);
	//vv.push_back(v);
	for ( int i = 0;i < vv.size(); i++)
	{
		for (int j = 0; j< vv[i].size(); j++)
			cout << vv[i][j] << " ";
		cout << endl;
	}

    return 0;
}
