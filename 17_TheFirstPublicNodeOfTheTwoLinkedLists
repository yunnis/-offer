#include <iostream>

using namespace std;

struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};

class Solution {
public:
    ListNode* FindFirstCommonNode( ListNode* pHead1, ListNode* pHead2) {
        ListNode* res = NULL,*P1,*P2;
        if (pHead1 == NULL || pHead2 == NULL)
        {
            return res;
        }
        P1 = pHead1; P2 = pHead2;
        int p1 = 0, p2 = 0, p = 0;
        while(pHead1->next != NULL)
		{
			pHead1 = pHead1->next;
			p1++;
		}
        while(pHead2->next != NULL)
		{
			pHead2 = pHead2->next;
			p2++;
		}
		if( p1 >= p2 )
		{
			p = p1 - p2;
			p1 = -1; // p1长
		}
		else
		{
			p = p2 - p1;
			p2 = -1; // p2长
		}
		pHead1 = P1; pHead2 = P2;
		if ( p1 == -1)
		{
			while ( p != 0)
			{
				pHead1 = pHead1->next;
				p--;
			}
		}
		if ( p2 == -1)
		{
			while ( p != 0)
			{
				pHead2 = pHead2->next;
				p--;
			}
		}
		while ( pHead1 != pHead2 )
		{
			pHead1 = pHead1->next;
			pHead2 = pHead2->next;
		}
		res = pHead1;
		return res;
    }
};
int main()
{
	ListNode a1(1),a2(2),a3(3),b1(4),b2(5),ab1(6),ab2(7);
	a1.next = &a2; a2.next = &a3; a3.next = &ab1; ab1.next = &ab2;
	b1.next = &b2; b2.next = &ab1;
	Solution s;
	cout << s.FindFirstCommonNode(&a1, &b1)->val;

    cout << "Hello world!" << endl;
    return 0;
}
